INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/core)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/datamodel)

SET(GUI_HEADERS "")
SET(GUI_SOURCES "")

SC_ADD_GUI_SUBDIR_SOURCES(GUI core)
SC_ADD_GUI_SUBDIR_SOURCES(GUI datamodel)
SC_ADD_GUI_SUBDIR_SOURCES(GUI plot)
SC_ADD_GUI_SUBDIR_SOURCES(GUI map)

SET(PROJECT_API_H qt.h)
SET(GUI_HEADERS "")
SC_ADD_GUI_LIBRARY(GUI qt)

SET(GUI_MOC_HEADERS "")
SET(GUI_UI_HEADERS "")
SC_LIB_INSTALL_HEADERS(GUI)

IF (SC_GLOBAL_GUI_QT5)
	FIND_PACKAGE(Qt5 COMPONENTS Svg Xml)
	INCLUDE_DIRECTORIES(${Qt5Svg_INCLUDE_DIRS})
	INCLUDE_DIRECTORIES(${Qt5Xml_INCLUDE_DIRS})
	SC_LIB_LINK_LIBRARIES(qt Qt5::Svg Qt5::Xml ${OPENSSL_LIBRARIES})
ELSE()
	INCLUDE_DIRECTORIES(${QT_QTXML_INCLUDE_DIR})
	SC_LIB_LINK_LIBRARIES(qt ${QT_QTSVG_LIBRARY_RELEASE} ${QT_QTXML_LIBRARY_RELEASE} ${OPENSSL_LIBRARIES})
ENDIF()

SC_LIB_VERSION(qt ${SC_COMMON_VERSION} ${SC_COMMON_VERSION_MAJOR})
SC_LIB_LINK_LIBRARIES_INTERNAL(qt client)

IF(MACOSX)
	SET_TARGET_PROPERTIES(seiscomp_qt PROPERTIES LINK_FLAGS -Wl,-framework,Cocoa)
ENDIF()
